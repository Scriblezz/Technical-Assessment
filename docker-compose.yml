services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-tech_assessment}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - appnet

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - appnet

  api:
    build:
      context: ./backend-lumen
      dockerfile: Dockerfile
    container_name: lumen-api
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-tech_assessment}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
      CACHE_DRIVER: redis
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8000:80"
    volumes:
      - ./backend-lumen:/var/www/html
      - /var/www/html/vendor
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - appnet

  cache:
    build:
      context: ./node-cache
      dockerfile: Dockerfile
    environment:
      PORT: 5000
      REDIS_URL: redis://redis:6379
      API_BASE_URL: http://api
    ports:
      - "5000:5000"
    volumes:
      - ./node-cache:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      api:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_CACHE_URL: http://localhost:5000
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      api:
        condition: service_started
      cache:
        condition: service_started
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  redis-data:
  mysql-data:
